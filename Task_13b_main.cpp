#include"Task_13b.h"

//==================================================================================================
//			Зачетная задача №13b по базовой части C++
//	Программа должна прочитать в динамический список структур данные из заданного текстового файла,
// содержащего записи включающие(стоимость товара, пошлину в %, название товара).
// Названия могут повторяться. Нужно сформировать новый набор данных без повтора названий 
// {название товара; суммарная стоимость с пошлинами} из тех товаров, чьи суммарные пошлинные сборы
// оказались выше заданного уровня. В результирующий текстовый файл вывести отобранные данные,
// расположив в алфавитном порядке по названиям товаров.
//==================================================================================================

int main()
{
	SimpleTimer time;
	setlocale(LC_ALL, "ru");
	cout << "\tЗачетная задача №13b по базовой части C++\n";

	list<Node*> my_List;
	string File1 = "File_BDate.txt";
	string File2 = "File_result.txt";

	int take_duty;
#ifdef DEBUG
	cout << " Enter_Duty: ";
		cin >> take_duty;
	cin.get();
#else
	take_duty = 20;
#endif // !DEBUG
	   

	if (input_text(File1, my_List))			//попытка чтения файла
	{
		cout << "\tИсходный файл успешно прочитан." << endl;
	}
	else if (RandomCase(File1))				//создание псевдо-случайных записей в файл
	{
		input_text(File1, my_List);
	}

	
#ifdef DEBUG	
	cout << "================================================" << endl;
	list_c_print(my_List, "\tПрочитано из файла: ");
#endif 
	   
	process_cmp(my_List);					//исключить повторы

#ifdef DEBUG
	cout << "================================================" << endl;
	list_c_print(my_List, "\tВид без повторов: ");
#endif 

	my_List.sort(comp_sort);				//сортировка по алфавиту

#ifdef DEBUG
	list_c_print(my_List, "\tAfter std::list::sort():");
#endif 
	if (list_f_print(File2, my_List, take_duty))	//запись в файл
		cout << "\tФайл итоговых данных сформирован!" << endl;
	del_list(my_List);						//освобождение памяти

	return 0;
}

